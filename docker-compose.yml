# Specify the version for docker-compose.yml
version: "3.8"
networks:
  k6:
  grafana:
# add the serivces needed (postgres,phppgadmin)
services:
  db:
    container_name: postgres_converter
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: converter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_converter
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"

  redis:
    container_name: redis_converter
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - redis:/data
  
  web-celery:
    build:
      context: .
      dockerfile: Dockerfile
    stop_signal: SIGINT
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    volumes:
      - ./api:/app/api
      - web-celery:/app/files
    entrypoint: [ "celery", "-A", "api.tasks.tasks", "worker", "--loglevel=INFO" ]

  web:
    build:
      context: .
      dockerfile: Dockerfile
    stop_signal: SIGINT
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=./api/converter-app.json
    depends_on:
      - db
      - redis
    ports:
      - '5001:5001'
    links:
      - db
      - redis
    volumes:      
      - ./api:/app/api      
      - web-celery:/app/files
    entrypoint: [ "flask", "run", "--host=0.0.0.0", "-p 5001" ]

  
    # entrypoint: ["tail", "-f", "/dev/null"]

  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:9.3.8
    networks:
      - grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana:/etc/grafana/provisioning/

volumes:
  web-celery:
  db-data:
  pgadmin-data:
  redis:
    driver: local
